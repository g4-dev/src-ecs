security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:

        admin_provider:
            entity:
                class: Core\Entity\Admin
                property: email

        user_provider:
            entity:
                class: Core\Entity\User
                property: email

    role_hierarchy:
        ROLE_PRO: [ROLE_USER]
        ROLE_MARKETING: [ROLE_ADMIN]
        ROLE_EMPLOYEE: [ROLE_ADMIN]
        ROLE_SUBADMIN: [ROLE_ADMIN]
        ROLE_SUPERADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # bcrypt use unique_id of user to encrypt password in db
    encoders:
        Core\Entity\Admin: bcrypt
        Core\Entity\User: bcrypt

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            pattern: ^/admin
            anonymous: ~
            provider: admin_provider
            guard:
                authenticators:
                    - admin.security.login_form_guard
            logout:
                path: /admin/logout
                target: /admin

        front_office:
            pattern: ^/
            anonymous: ~
            provider: user_provider
            guard:
                authenticators:
                    - front_office.security.login_form_guard
            logout:
                path: /logout
                target: /

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # these aren't real roles (just defaults symfony session flag)
    access_control:
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, role: ROLE_ADMIN }
        - { path: ^/, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - {path: ^/pro, role: ROLE_PRO}
        - {path: ^/pro/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
